---
import type { GetStaticPaths } from 'astro'
import { getEntryBySlug, getCollection } from 'astro:content'
import { Icon } from 'astro-icon/components'
import { slug } from 'github-slugger'
import { formatDate } from '@/utils/time'
import PostLayout from '@/layouts/PostLayout.astro'

export const getStaticPaths = (async () => {
  const allPost = await getCollection('blog')

  return allPost.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}) satisfies GetStaticPaths

const { entry } = Astro.props
const { title, date, tags } = entry.data

console.log(tags?.length)

const { Content } = await entry.render()
---

<PostLayout title={title}>
  <div class='break-all'>
    <h1
      class='mt-12 sm:mt-14 text-2xl sm:text-4xl text-black dark:text-white !leading-snug tracking-tight font-medium'
    >
      {title}
    </h1>
    <div
      class='text-gray-600 dark:text-gray-400 flex items-center text-sm mt-4'
    >
      <Icon name='iconoir:clock' class='mr-1 text-lg' />

      {`发布时间：`}
      {formatDate(date, 'LL')}
    </div>
    {
      tags && tags.length > 0 && (
        <div class='flex items-center flex-wrap m-auto mt-6 sm:mt-8 text-sm gap-2 sm:gap-3'>
          {tags.map((tag) => (
            <a
              href={`/tags/${slug(tag)}`}
              class='bg-pink-500/10 text-pink-500 hover:text-pink-600 px-2 py-1 rounded font-bold transition'
            >
              {slug(tag)}
            </a>
          ))}
        </div>
      )
    }
    <div class='flex w-full'>
      <article
        class='prose prose-base sm:prose-lg dark:prose-dark w-full mt-10 max-w-none'
      >
        <Content />
      </article>
    </div>
  </div>
</PostLayout>

<style is:global>
  html.dark .astro-code-themes,
  html.dark .astro-code-themes span {
    color: var(--shiki-dark) !important;
    background-color: var(--shiki-dark-bg) !important;
    /* Optional, if you also want font styles */
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }

  .task-list-item::before {
    @apply hidden;
  }

  .task-list-item {
    @apply list-none;
  }

  .footnotes {
    @apply pt-8 mt-12 border-t border-gray-200 dark:border-gray-700;
  }
</style>
